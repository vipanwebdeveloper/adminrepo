<?php

namespace MazeWorld\MoviesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AdminRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdminRepository extends EntityRepository
{

	public function findOneUserByAccountAndId($account, $id){
		return $this->getEntityManager()->createQueryBuilder()
    		->select('admin')
    		->from('TFTDataBundle:Admin', 'admin')
			->leftJoin('admin.accountadmin', 'accountAdmin')
			->where('accountAdmin.account = :account')
			->andWhere('admin.deleteAt IS NULL')
			->andWhere('accountAdmin.deleteAt IS NULL')
			->andWhere('admin.id = :id')
			->setParameter('account', $account)
			->setParameter('id', $id)
			->groupBy('admin.id')
            ->orderBy('admin.firstName', 'ASC')
            ->getQuery()->getOneORNullResult();
	}

	public function findUserByAccount($account)
	{	
		return $this->getEntityManager()->createQueryBuilder()
		->select('ca','Admin')
		->from('TFTDataBundle:AccountAdmin','ca')
		->leftjoin('ca.admin','Admin')
		->leftjoin('ca.account','Account')
		->where('Account = :account')
		->setParameter('account',$account);
		//->getQuery()->execute();
	}


	public function findUsersByAccount($account, $frequency = '')
	{	
		return $this->getEntityManager()->createQueryBuilder()
		->select('accountAdmin','Admin')
		->from('TFTDataBundle:AccountAdmin','accountAdmin')
		->leftjoin('accountAdmin.admin','Admin')
		->leftjoin('accountAdmin.account','Account')
		->leftjoin('Admin.adminSiteSettings','adminSiteSettings')
		->where('Account = :account')
		->andwhere("Admin.roles LIKE '%ROLE_ADMIN%'")
		->andwhere('adminSiteSettings.isActive = :isActive')
		->andwhere('adminSiteSettings.frequency = :frequency')
		->setParameter('account',$account)
		->setParameter('isActive', true)
		->setParameter('frequency', $frequency)
		->getQuery()->execute();
	}

	public function findQbAll()
	{	
		return $this->getEntityManager()->createQueryBuilder()
		->select('Admin')
		->from('TFTDataBundle:Admin','Admin')
		->andwhere('Admin.deleteAt is null')
		;
		//->getQuery()->execute();
	}


	public function findAllDeleted(){
		return $this->getEntityManager()->createQueryBuilder()
			->select('Admin')
			->from('TFTDataBundle:Admin', 'Admin')
			->where('Admin.deleteAt is not null')
		->getQuery()->execute();
	}
}
